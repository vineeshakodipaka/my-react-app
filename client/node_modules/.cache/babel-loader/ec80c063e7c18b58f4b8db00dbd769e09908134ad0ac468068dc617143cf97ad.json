{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adminpanel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([{\n    id: 1,\n    name: \"vineesha\"\n  }, {\n    id: 2,\n    name: \"Bhavani\"\n  }, {\n    id: 3,\n    name: \"Sirisha\"\n  }, {\n    id: 4,\n    name: \"Samatha\"\n  }]);\n  const [list, setList] = useState(\"\");\n  const [editid, setEditId] = useState(null);\n  const [editvalue, setEditValue] = useState(\"\");\n  const add = () => {\n    setData([...data, {\n      id: data.length + 1,\n      name: list\n    }]);\n    setList(\"\");\n  };\n  const del = i => {\n    const updatedData = data.filter((item, index) => index !== i);\n    setData(updatedData);\n  };\n  const edit = (id, name) => {\n    setEditId(id);\n    setEditValue(name);\n  };\n  const update = () => {\n    if (editvalue.trim() !== \"\") {\n      const updatedData = data.map(item => item.id === editid ? {\n        ...item,\n        name: editvalue\n      } : item);\n      setData(updatedData);\n      setEditId(null);\n      setEditValue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editid !== null ? editvalue : list,\n      onChange: e => {\n        editid !== null ? setEditValue(e.target.value) : setList(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), data.map((dta, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: dta.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => edit(dta.id, dta.name),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => del(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, dta.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4HzrQBaEYkOiaMWIm/KBMhMIOe4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","data","setData","id","name","list","setList","editid","setEditId","editvalue","setEditValue","add","length","del","i","updatedData","filter","item","index","edit","update","trim","map","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dta","_c","$RefreshReg$"],"sources":["D:/Adminpanel/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"vineesha\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Bhavani\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sirisha\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Samatha\",\r\n    },\r\n  ]);\r\n\r\n  const [list, setList] = useState(\"\");\r\n  const [editid, setEditId] = useState(null);\r\n  const [editvalue, setEditValue] = useState(\"\");\r\n\r\n  const add = () => {\r\n    setData([...data, { id: data.length + 1, name: list }]);\r\n    setList(\"\");\r\n  };\r\n\r\n  const del = (i) => {\r\n    const updatedData = data.filter((item, index) => index !== i);\r\n    setData(updatedData);\r\n  };\r\n\r\n  const edit = (id, name) => {\r\n    setEditId(id);\r\n    setEditValue(name);\r\n  };\r\n\r\n  const update = () => {\r\n    if (editvalue.trim() !== \"\") {\r\n      const updatedData = data.map((item) =>\r\n        item.id === editid ? { ...item, name: editvalue } : item\r\n      );\r\n      setData(updatedData);\r\n      setEditId(null);\r\n      setEditValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={editid !== null ? editvalue : list}\r\n        onChange={(e) => {\r\n          editid !== null\r\n            ? setEditValue(e.target.value)\r\n            : setList(e.target.value);\r\n        }}\r\n      />\r\n      <button onClick={add}>Add</button>\r\n      {data.map((dta, index) => (\r\n        <div key={dta.id}>\r\n          <h2>{dta.name}</h2>\r\n          {/* {editid === dta.id ? (\r\n            <>\r\n              <input\r\n                type=\"text\" \r\n                value={editvalue}\r\n                onChange={(e) => setEditValue(e.target.value)}\r\n              />\r\n              <button onClick={update}>Update</button>\r\n            </>\r\n          ) : (\r\n          \r\n          )} */}\r\n            <button onClick={() => edit(dta.id, dta.name)}>Edit</button>\r\n          <button onClick={() => del(index)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}