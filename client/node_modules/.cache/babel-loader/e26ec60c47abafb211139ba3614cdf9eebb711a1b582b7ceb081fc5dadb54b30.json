{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adminpanel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setdata] = useState([{\n    id: 1,\n    name: \"vineesha\"\n  }, {\n    id: 2,\n    name: \"Bhavani\"\n  }, {\n    id: 3,\n    name: \"Sirisha\"\n  }, {\n    id: 4,\n    name: \"Samatha\"\n  }]);\n  const [list, setList] = useState(\"\");\n  const [editid, setedtitid] = useState(null);\n  const [editvalue, seteditvalue] = useState(\"\");\n  const add = () => {\n    setdata([...data, {\n      name: list\n    }]);\n  };\n  const del = i => {\n    const deldta = data.filter((item, ind) => ind !== i);\n    setdata(deldta);\n  };\n  const edit = (id, name) => {\n    seteditvalue(name);\n    setedtitid(id);\n  };\n  const update = () => {\n    if (editvalue.trim() !== \"\") {\n      const update = data.map(item => item.id == editid ? {\n        ...item,\n        name: editvalue\n      } : item);\n      setdata(update);\n      setedtitid(null);\n      setEditvalue(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: editid !== null ? editvalue : list,\n      onChange: e => {\n        editid !== null ? seteditvalue(e.target.value) : setList(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), editid !== null ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: update,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: add,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), data.map((dta, ind) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dta.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => del(ind),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => edit(dta.id, dta.name),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iZa1VkCVZp+0dq+c0XHiC3JVy0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setdata","id","name","list","setList","editid","setedtitid","editvalue","seteditvalue","add","del","i","deldta","filter","item","ind","edit","update","trim","map","setEditvalue","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","dta","_c","$RefreshReg$"],"sources":["D:/Adminpanel/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  const [data, setdata] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"vineesha\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Bhavani\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Sirisha\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Samatha\",\r\n    },\r\n  ]);\r\n  const [list, setList] = useState(\"\");\r\n  const [editid, setedtitid] = useState(null);\r\n  const [editvalue, seteditvalue] = useState(\"\");\r\n  const add = () => {\r\n    setdata([...data, { name: list }]);\r\n  \r\n  };\r\n\r\n  const del = (i) => {\r\n    const deldta = data.filter((item,ind) => ind !== i);\r\n    setdata(deldta);\r\n  };\r\n  const edit = (id, name) => {\r\n    seteditvalue(name);\r\n    setedtitid(id);\r\n  };\r\n const update = () => {\r\n   if (editvalue.trim() !== \"\") {\r\n     const update = data.map((item) =>\r\n       item.id == editid ? { ...item, name: editvalue } : item\r\n     );\r\n     setdata(update);\r\n     setedtitid(null);\r\n     setEditvalue(\"\");\r\n   }\r\n };\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={editid !== null ? editvalue : list}\r\n        onChange={(e) => {\r\n          editid !== null\r\n            ? seteditvalue(e.target.value)\r\n            : setList(e.target.value);\r\n        }}\r\n      />\r\n      {editid !== null ? \r\n        <button onClick={update}>Update</button>\r\n      : \r\n        <button onClick={add}>Add</button>\r\n      }\r\n      {data.map((dta, ind) => {\r\n        return (\r\n          <>\r\n            <h2>{dta.name}</h2>\r\n            <button onClick={() => del(ind)}>Delete</button>\r\n            <button onClick={() => edit(dta.id, dta.name)}>Edit</button>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}